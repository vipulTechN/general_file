<div class="wrapper">
          <div class="container-calendar">
            <div id="right">
              <h3 id="monthAndYear"></h3>
              <div class="button-container-calendar">
                <button id="previous" onclick="previous()">
                  ‹
                </button>
                <button id="next" onclick="next()">
                  ›
                </button>
              </div>
              <table class="table-calendar" id="calendar" data-lang="en">
                <thead id="thead-month"></thead>
                <tbody id="calendar-body"></tbody>
              </table>
              <div class="footer-container-calendar">
                <label for="month">Jump To: </label>
                <select id="month" onchange="jump()">
                  <option value=0>Jan</option>
                  <option value=1>Feb</option>
                  <option value=2>Mar</option>
                  <option value=3>Apr</option>
                  <option value=4>May</option>
                  <option value=5>Jun</option>
                  <option value=6>Jul</option>
                  <option value=7>Aug</option>
                  <option value=8>Sep</option>
                  <option value=9>Oct</option>
                  <option value=10>Nov</option>
                  <option value=11>Dec</option>
                </select>
                <select id="year" onchange="jump()"></select>
              </div>
            </div>
          </div>
        </div>

<style>
     .container-calendar{background:#fff;padding:15px;overflow:auto;box-shadow:0 4px 8px 0 rgba(0,0,0,.2)}.button-container-calendar button{cursor:pointer;background:green;color:#fff;border:1px solid green;border-radius:4px;padding:5px 10px}.table-calendar{border-collapse:collapse;width:100%}.table-calendar td,.table-calendar th{padding:5px;border:1px solid #e2e2e2;text-align:center;vertical-align:top}.date-picker.selected{background-color:#f2f2f2;font-weight:700;outline:#00BCD4 dashed 1px}.date-picker.selected span{border-bottom:2px solid currentColor}.date-picker:first-child{color:red}.date-picker:nth-child(6){color:green}.date-picker:hover{background-color:green;color:#fff;cursor:pointer}#monthAndYear{text-align:center;margin-top:0}.button-container-calendar{position:relative;margin-bottom:1em;overflow:hidden;clear:both}#previous{float:left}#next{float:right}.footer-container-calendar{margin-top:1em;border-top:1px solid #dadada;padding:10px 0}.footer-container-calendar select{cursor:pointer;background:#fff;color:#585858;border:1px solid #bfc5c5;border-radius:3px;padding:5px 1em}
    </style>


<script>
  let events = [];

  let eventDateInput =
    document.getElementById("eventDate");
  let eventTitleInput =
    document.getElementById("eventTitle");
  let eventDescriptionInput =
    document.getElementById("eventDescription");
  let reminderList =
    document.getElementById("reminderList");

  // Counter to generate unique event IDs
  let eventIdCounter = 1;

  function generate_year_range(start, end) {
    let years = "";
    for (let year = start; year <= end; year++) {
      years += "<option value='" +
        year + "'>" + year + "</option>";
    }
    return years;
  }

  today = new Date();
  currentMonth = today.getMonth();
  currentYear = today.getFullYear();
  selectYear = document.getElementById("year");
  selectMonth = document.getElementById("month");

  createYear = generate_year_range(1970, 2050);

  document.getElementById("year").innerHTML = createYear;

  let calendar = document.getElementById("calendar");

  let months = [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December"
  ];
  let days = [
    "Sun", "Mon", "Tue", "Wed",
    "Thu", "Fri", "Sat"
  ];

  $dataHead = "<tr>";
  for (dhead in days) {
    $dataHead += "<th data-days='" +
      days[dhead] + "'>" +
      days[dhead] + "</th>";
  }
  $dataHead += "</tr>";

  document.getElementById("thead-month").innerHTML = $dataHead;

  monthAndYear =
    document.getElementById("monthAndYear");
  showCalendar(currentMonth, currentYear);

 
  function next() {
    currentYear = currentMonth === 11 ?
      currentYear + 1 : currentYear;
    currentMonth = (currentMonth + 1) % 12;
    showCalendar(currentMonth, currentYear);
  }

  function previous() {
    currentYear = currentMonth === 0 ?
      currentYear - 1 : currentYear;
    currentMonth = currentMonth === 0 ?
      11 : currentMonth - 1;
    showCalendar(currentMonth, currentYear);
  }


  function jump() {
    currentYear = parseInt(selectYear.value);
    currentMonth = parseInt(selectMonth.value);
    showCalendar(currentMonth, currentYear);
  }


  function showCalendar(month, year) {
    let firstDay = new Date(year, month, 1).getDay();
    tbl = document.getElementById("calendar-body");
    tbl.innerHTML = "";
    monthAndYear.innerHTML = months[month] + " " + year;
    selectYear.value = year;
    selectMonth.value = month;

    let date = 1;
    for (let i = 0; i < 6; i++) {
      let row = document.createElement("tr");
      for (let j = 0; j < 7; j++) {
        if (i === 0 && j < firstDay) {
          cell = document.createElement("td");
          cellText = document.createTextNode("");
          cell.appendChild(cellText);
          row.appendChild(cell);
        } else if (date > daysInMonth(month, year)) {
          break;
        } else {
          cell = document.createElement("td");
          cell.setAttribute("data-date", date);
          cell.setAttribute("data-month", month + 1);
          cell.setAttribute("data-year", year);
          cell.setAttribute("data-month_name", months[month]);
          cell.className = "date-picker";
          cell.innerHTML = "<span>" + date + "</span";

          if (
            date === today.getDate() &&
            year === today.getFullYear() &&
            month === today.getMonth()
          ) {
            cell.className = "date-picker selected";
          }

          if (hasEventOnDate(date, month, year)) {
            cell.classList.add("event-marker");
            cell.appendChild(
              createEventTooltip(date, month, year)
            );
          }

          row.appendChild(cell);
          date++;
        }
      }
      tbl.appendChild(row);
    }

  }

  function getEventsOnDate(date, month, year) {
    return events.filter(function(event) {
      let eventDate = new Date(event.date);
      return (
        eventDate.getDate() === date &&
        eventDate.getMonth() === month &&
        eventDate.getFullYear() === year
      );
    });
  }

  function hasEventOnDate(date, month, year) {
    return getEventsOnDate(date, month, year).length > 0;
  }

  function daysInMonth(iMonth, iYear) {
    return 32 - new Date(iYear, iMonth, 32).getDate();
  }

  showCalendar(currentMonth, currentYear);
</script>